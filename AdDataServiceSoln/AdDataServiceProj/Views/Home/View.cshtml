@using AdDataServiceProj.Models
@using PagedList.Mvc

@model PagedList.IPagedList<AdDataServiceProj.VM.AdDataClientServiceViewModel>

@{        
    string currentFilter = ViewBag.CurrentFilter;
    string currentSort = ViewBag.CurrentSort;
    if (string.IsNullOrEmpty(currentSort))
    {
        currentSort = "BrandName";
    }

    string viewName = ViewBag.title;

}

<h2>@viewName</h2>
<table class="table table-striped table-hover table-responsive">
    <tr>
        <th>
            @Html.ActionLink("Ad Id", "View", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.AdIdSortParam))
            @Html.SortIdentifier(currentSort, "AdId")
        </th>
        <th>
            @Html.ActionLink("Brand Id", "View", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.BrandIdSortParam))
            @Html.SortIdentifier(currentSort, "BrandId")
        </th>
        <th>
            @Html.ActionLink("Brand Name", "View", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.BrandNameSortParam))
            @Html.SortIdentifier(currentSort, "BrandName")
        </th>
        <th>
            @Html.ActionLink("Num Pages", "View", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.NumPagesSortParam))
            @Html.SortIdentifier(currentSort, "NumPages")
        </th>
        <th>
            @Html.ActionLink("Position", "View", Request.QueryString.ToRouteValueDictionary("sortOrder", (string) ViewBag.PositionSortParam))
            @Html.SortIdentifier(currentSort, "Position")
        </th>
    </tr>



    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AdId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.BrandId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.BrandName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumPages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
        </tr>
    }
</table>
@if (Model.PageCount > 1)
{
    <div class="col-md-10">
        <div class="center">
            @Html.PagedListPager(Model, page => Url.Action("View", new { page, pageSize = Model.PageSize, sortOrder = ViewBag.CurrentSort }))
            Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Ads
        </div>
    </div>
}


